/*
    Generated by entity generator. Should only be edited in generator files.
*/

package de.timesnake.library.entities.pathfinder;


import de.timesnake.library.entities.entity.extension.ExEntityInsentient;
import net.minecraft.world.entity.ai.goal.target.PathfinderGoalNearestAttackableTarget;

public class ExPathfinderGoalNearestAttackableTarget extends ExPathfinderGoalTarget {

    private final java.lang.Class clazz;
    private final int chance;
    private final boolean checkOfCanSee;
    private final boolean onlyIfPathExists;
    private final java.util.function.Predicate predicate;

    public ExPathfinderGoalNearestAttackableTarget(java.lang.Class clazz, int chance, boolean checkOfCanSee, boolean onlyIfPathExists, java.util.function.Predicate predicate) {
        this.clazz = clazz;
        this.chance = chance;
        this.checkOfCanSee = checkOfCanSee;
        this.onlyIfPathExists = onlyIfPathExists;
        this.predicate = predicate;
    }

    public ExPathfinderGoalNearestAttackableTarget(java.lang.Class clazz, boolean checkOfCanSee, boolean onlyIfPathExists, java.util.function.Predicate predicate) {
        this.clazz = clazz;
        this.chance = 10;
        this.checkOfCanSee = checkOfCanSee;
        this.onlyIfPathExists = onlyIfPathExists;
        this.predicate = predicate;
    }

    public ExPathfinderGoalNearestAttackableTarget(java.lang.Class clazz, int chance, boolean checkOfCanSee, java.util.function.Predicate predicate) {
        this.clazz = clazz;
        this.chance = chance;
        this.checkOfCanSee = checkOfCanSee;
        this.onlyIfPathExists = false;
        this.predicate = predicate;
    }

    public ExPathfinderGoalNearestAttackableTarget(java.lang.Class clazz, boolean checkOfCanSee, java.util.function.Predicate predicate) {
        this.clazz = clazz;
        this.chance = 10;
        this.checkOfCanSee = checkOfCanSee;
        this.onlyIfPathExists = false;
        this.predicate = predicate;
    }

    public ExPathfinderGoalNearestAttackableTarget(java.lang.Class clazz, int chance, boolean checkOfCanSee, boolean onlyIfPathExists) {
        this.clazz = clazz;
        this.chance = chance;
        this.checkOfCanSee = checkOfCanSee;
        this.onlyIfPathExists = onlyIfPathExists;
        this.predicate = null;
    }

    public ExPathfinderGoalNearestAttackableTarget(java.lang.Class clazz, boolean checkOfCanSee, boolean onlyIfPathExists) {
        this.clazz = clazz;
        this.chance = 10;
        this.checkOfCanSee = checkOfCanSee;
        this.onlyIfPathExists = onlyIfPathExists;
        this.predicate = null;
    }

    public ExPathfinderGoalNearestAttackableTarget(java.lang.Class clazz, int chance, boolean checkOfCanSee) {
        this.clazz = clazz;
        this.chance = chance;
        this.checkOfCanSee = checkOfCanSee;
        this.onlyIfPathExists = false;
        this.predicate = null;
    }

    public ExPathfinderGoalNearestAttackableTarget(java.lang.Class clazz, boolean checkOfCanSee) {
        this.clazz = clazz;
        this.chance = 10;
        this.checkOfCanSee = checkOfCanSee;
        this.onlyIfPathExists = false;
        this.predicate = null;
    }


    @Override
    public void injectEntity(ExEntityInsentient entity) {
        super.pathfinderGoal = new PathfinderGoalNearestAttackableTarget((net.minecraft.world.entity.EntityInsentient) entity.getNMS(), clazz, chance, checkOfCanSee, onlyIfPathExists, predicate);
    }

}
